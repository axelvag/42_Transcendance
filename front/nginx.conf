# server {
#     listen 8000; # Le port sur lequel Nginx écoutera

#     location / {
#         root /usr/share/nginx/html; # Le répertoire où se trouvent vos fichiers statiques
#         index index.html; # Le fichier d'index à servir
#         try_files $uri $uri/ /index.html; # Gestion de la réécriture pour le routage côté client (pour les routes SPA)
#     }

# }

# j'utilise reverse proxy pour rediriger le trafic vers l'appli Django

worker_processes auto;

events {
    worker_connections 1024;
}

http
{
    # ameliore l'efficacite de la transmission de fichiers par le serveur
    sendfile on;

    server
    {
        listen 8000;

        client_max_body_size 20M;
        
        #indique que la connection sera fait depuis cet host
        server_name localhost;

        # / signifie que cette configuration s'appliquera a toutes les requetes pour l'adresse principale du site
        location /
        {
            root /usr/share/nginx/html; # Le répertoire où se trouvent vos fichiers statiques
            index index.html;
            try_files $uri $uri/ /index.html; # Gestion de la réécriture pour le routage côté client (pour les routes SPA)

            # Redirige vers l'addr de votre application Django/backend
            proxy_pass http://127.0.0.1:8001;
            # Definit l'en-tete HTTP Host à la valeur du nom d'hote du client
            # pour que l'application Django determine le nom de domaine d'origine de la requete
            proxy_set_header Host $host;
            # pour obtenir l'addr IP reelle du client lorsque Nginx est utilise comme proxy
            proxy_set_header X-Real-IP $remote_addr;
            # pour suivre la chaine d'addr IP lorsque plusieurs proxies sont impliques
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # indique a Django le nom du serveur d'origine de la requete
            proxy_set_header X-Forwarded-Host $server_name;
        }
    }
}