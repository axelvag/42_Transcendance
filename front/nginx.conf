# j'utilise reverse proxy pour rediriger le trafic vers l'appli Django

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    server {
        # listen on port 80
        # listen 80;

        listen 8443 ssl;
        # listen [::]:8443 ssl;

        # https
        # ssl on;
        ssl_protocols	TLSv1.2 TLSv1.3;
        ssl_certificate	/etc/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key	/etc/ssl/private/nginx-selfsigned.key;
        # server_name     avaganay.42.fr;
        # ssl_ciphers     HIGH:!aNULL:!MD5;

        # save logs here
        access_log /var/log/nginx/access.log compression;

        gzip on;
        gzip_types text/html application/javascript application/json text/css;

        # where the root here
        root /usr/share/nginx/html;
        # what file to server as index
        index index.html;

        # Configure le proxy_pass pour rediriger le trafic vers l'application Django sur le port 8001
        location / {
            # proxy_pass https://127.0.0.1:8001;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;

            # proxy_pass http://127.0.0.1:8001;
            # proxy_set_header Host $host;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;
            # proxy_read_timeout 600s;  # Adjust timeout as necessary
            # proxy_connect_timeout 600s;  # Adjust timeout as necessary
            # proxy_send_timeout 600s;  # Adjust timeout as necessary
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ $uri.html /index.html;
        }

        location ~* \.(?:css|js|jpg|svg)$ {
            expires 30d;
            add_header Cache-Control "public";
        }

        location ~* \.(?:json)$ {
            expires 1d;
            add_header Cache-Control "public";
        }
    }
}

